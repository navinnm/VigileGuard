name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: |
        twine check dist/*
        echo "✅ Package validation passed"

    - name: Publish to Test PyPI
      if: github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        echo "🚀 Publishing to Test PyPI..."
        twine upload --repository-url https://test.pypi.org/legacy/ dist/* --verbose || {
          echo "❌ Upload failed. Common causes:"
          echo "1. Package name 'vigileguard' already exists"
          echo "2. Version '3.0.2' already uploaded"
          echo "3. Try changing name to 'vigileguard' or increment version"
          exit 1
        }
        echo "✅ Published to Test PyPI"

    - name: Publish to PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
        echo "✅ Published to PyPI"

    - name: Create package info
      run: |
        echo "📦 Package Information:" >> $GITHUB_STEP_SUMMARY
        echo "- Version: $(python -c 'import vigileguard; print(vigileguard.__version__ if hasattr(vigileguard, "__version__") else "3.0.2")')" >> $GITHUB_STEP_SUMMARY
        echo "- Install command: \`pip install vigileguard\`" >> $GITHUB_STEP_SUMMARY
        echo "- Package size: $(du -h dist/*.whl | cut -f1)" >> $GITHUB_STEP_SUMMARY